# -*- coding: utf-8 -*-

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import datetime
import seaborn

starttime = datetime.datetime.now()

# pd.set_option('display.height',1000)
pd.set_option('display.width',1000)
pd.set_option('display.max_rows',500)
pd.set_option('display.max_columns',500)


# ========== plot The every timeslot accuracy (10W)
fig = plt.figure(figsize=(8,6))
# fig = plt.figure()
x = np.linspace(5,24,38)
print('single step:')
# y11 = [0.9986695628151535, 0.992424932377665, 0.9777036031851561, 0.9467453241166596, 0.8931248349286436, 0.831994547712073, 0.7864098080466784, 0.7898751681071514, 0.8598593516148911, 0.9119543537854846, 0.9437747986508926, 0.9559081125551376, 0.960517208404295, 0.9592209239138684, 0.9589598455387474, 0.9564940210016302, 0.9578866919851975, 0.9595427181901804, 0.9629997298142396, 0.9622119409962873, 0.9610499904372456, 0.9562686132184588, 0.9496224988843454, 0.9332815730275681, 0.9040074012683552, 0.8616831054969141, 0.8256778171419203, 0.8130785086960349, 0.8430068942905802, 0.8838231588661912, 0.9103218549922132, 0.9218685015012007, 0.9299664848225426, 0.9380500481173517, 0.9515972835705807, 0.9700716144054548, 0.9890278777060318, 0.9985154962158814]
y11 = [0.9986695628151535, 0.9924401113529628, 0.9777354790332814, 0.9465373721550806, 0.8929768399194907, 0.8322601797797834, 0.7871869715819224, 0.7912139537284117, 0.8604080715719044, 0.912374052452467, 0.9437315385712941, 0.956066732846999, 0.9607471698800557, 0.959250522915699, 0.9589294875881519, 0.9566427749595481, 0.958050624918413, 0.9597483933054647, 0.9632767461134234, 0.9624578403961105, 0.9612101286266367, 0.9567695194032841, 0.9501158155815217, 0.9340837818720534, 0.905087385360789, 0.8630712227878921, 0.827711799831817, 0.8146647116146484, 0.8444762190994011, 0.8851118538689691, 0.9112864788723842, 0.9226828535259242, 0.9310722731729827, 0.9393842800460227, 0.9527986994653965, 0.9707850262444483, 0.9892661876182063, 0.9985329520374738]

print('average of commuter:',np.mean(y11))
# y12 = [0.9976636635675538, 0.987011462984003, 0.9661977991497442, 0.9255039392339164, 0.8672875560747414, 0.7941570252783068, 0.735012508467886, 0.7091581187691027, 0.769801518085271, 0.8165709195457479, 0.8590463693438521, 0.8767022451232978, 0.8843726829996853, 0.8809375216697871, 0.876408869543881, 0.867239549161746, 0.8666367956985805, 0.8699652749996, 0.8770009548041585, 0.8775130285427768, 0.8744725907197303, 0.8677889616104719, 0.8592010582857265, 0.8385207469875662, 0.8059027166578654, 0.77587705962992, 0.7568396515764937, 0.7699242024184816, 0.8079563457137828, 0.8539202978562246, 0.8775450331514405, 0.8858875678097646, 0.8897654595595099, 0.8995375334048102, 0.9209912894123421, 0.9505368773103327, 0.9808505758162509, 0.9974823041184597]
y12 = [0.9976636635675538, 0.9870488016941106, 0.9658670848602199, 0.9257706443061134, 0.8671755399444186, 0.7939970022349885, 0.7368527734660458, 0.709947565782806, 0.7701375664762392, 0.81638422599521, 0.8583102633445883, 0.8768195953550645, 0.8850074410715143, 0.8814602636112934, 0.877945090759736, 0.8679543187552341, 0.8682583625375387, 0.8692131666960042, 0.8774863580355571, 0.8770542958185978, 0.8760194801384733, 0.8692185007974481, 0.8610466573853301, 0.840441023507385, 0.8103406890592245, 0.7807310919439066, 0.7636939719319582, 0.7768478660927174, 0.8154400900396324, 0.8570940882153697, 0.8809961967856704, 0.8893493996468825, 0.8920111162674091, 0.9037141348354163, 0.9247678332346525, 0.9526705178879092, 0.9820987555541332, 0.997460967712684]

print('average of noncommuter:',np.mean(y12))
# y13 = [0.9953114429113108, 0.9800500322534967, 0.9511634858949952, 0.8942242640696046, 0.8029390015576079, 0.7013483534983244, 0.6357714879088721, 0.636998694126717, 0.7183561730046099, 0.7842949070941959, 0.8408565270064035, 0.8746204314101859, 0.8867980931103384, 0.884359414087698, 0.879843924542551, 0.8735190924967353, 0.8793719221510722, 0.8796393901729103, 0.8865935587406977, 0.8885759687849085, 0.8926194559385767, 0.8875060966975566, 0.881401532434431, 0.8651961169936594, 0.832391950785884, 0.7874887899432024, 0.7634638682169324, 0.775106593873409, 0.8213156279991819, 0.8680595981686308, 0.8937994619172737, 0.9029091080728142, 0.9071885964222218, 0.9138752969681713, 0.9282713699082742, 0.9520917572649035, 0.9839519186897213, 0.9979703897166412]
y13 = [0.9953114429113108, 0.9802545666231376, 0.9503296150033826, 0.8932645258735977, 0.8021208640790447, 0.7013955537374723, 0.6368413599962239, 0.6409477808020894, 0.7190327097657295, 0.7861042495948646, 0.8423512012460863, 0.8734246920184395, 0.8858226215012823, 0.8836356770874306, 0.8817004672823676, 0.8716782831699681, 0.8771063106719741, 0.8793719221510722, 0.8861058229361696, 0.8883399675891691, 0.8918170518730628, 0.8865463585015497, 0.8828962066741138, 0.8650545162762158, 0.8343586274170456, 0.7886687959218993, 0.7637470696518196, 0.7737849871772684, 0.8190342831070344, 0.8681697320599757, 0.8938623955694709, 0.9031923095077015, 0.9075819317484541, 0.9134662282288897, 0.9275633663210561, 0.9525322928302836, 0.9830865809720103, 0.9979546563035919]

print('average of nonhome:',np.mean(y13))


print('multi step:')
# y21 = [0.9986695628151535, 0.9919073293200122, 0.9732379486525624, 0.9314433991190123, 0.8545876934939876, 0.752499977231537, 0.6529850972820527, 0.5939290170399176, 0.6092499157566871, 0.6423992799094119, 0.6674870902815093, 0.6791566864904084, 0.6849451887201998, 0.6857041374850866, 0.6857974881831678, 0.6841824452114886, 0.6846256712901826, 0.6850430931108703, 0.6857246291017386, 0.6836026083551152, 0.6803710045142273, 0.674889876534215, 0.6673694532229518, 0.653673463811805, 0.6280839883061174, 0.5862423839491444, 0.5372067042498095, 0.4975258270264691, 0.49200751055697733, 0.5134288394459067, 0.5388035324511313, 0.5597004277435239, 0.5803772278940993, 0.6019412391508274, 0.6264492126665513, 0.6508903986909652, 0.6720688639751308, 0.6812475903376715]
y21 = [0.9986695628151535, 0.9919058114224825, 0.9733472372747061, 0.9313879958591755, 0.8546818031408335, 0.7518920592708628, 0.6524834321484625, 0.5937666020042319, 0.6092294241400351, 0.641928731675182, 0.6668139027270547, 0.6786390834327556, 0.6843319581181714, 0.6851979186589072, 0.6849034465381311, 0.6834341217293103, 0.6837460496716787, 0.6842955285774568, 0.6852077849928507, 0.6829438408271934, 0.6799846995928999, 0.6745422779998967, 0.667274584627341, 0.6534374307459252, 0.6275846000188219, 0.5857262987890214, 0.5368788383833785, 0.49805785011065473, 0.49338348466771703, 0.5149505317195047, 0.5400982990440282, 0.5607530896804218, 0.5811650167120518, 0.6028094765378579, 0.6272377604332686, 0.6514709944961036, 0.6726623619092722, 0.6816096088985225]

print('average of commuter:',np.mean(y21))
# y22 = [0.9976636635675538, 0.9867767625204696, 0.9598022115184587, 0.906375851455943, 0.8207261845705781, 0.7095475081745105, 0.603073509251999, 0.5317992457580558, 0.542958185978781, 0.5665669189696649, 0.5907677372208264, 0.6039589700916932, 0.6115280600406459, 0.6126002144308781, 0.614611170675244, 0.6121734863153627, 0.6161527259925429, 0.6211241085382961, 0.6324057330922319, 0.6359689128567847, 0.6354248345095027, 0.6304587860651933, 0.6229963781451195, 0.6040709862220159, 0.5733625642092461, 0.5345783126103493, 0.4945778858822337, 0.4759992105529863, 0.47907165298469645, 0.49267361166674667, 0.49961327764531427, 0.5012401785857163, 0.5004667338763449, 0.5059768606679362, 0.5190827479156999, 0.5387122412294038, 0.5590938428467033, 0.5691752945757522]
y22 = [0.9976636635675538, 0.987011462984003, 0.9598288820256784, 0.9060611394707505, 0.8219796984099044, 0.7105396510430836, 0.603617587599281, 0.5306364116432767, 0.5416673334293471, 0.5644866194065279, 0.5885594192230348, 0.6007905138339921, 0.6094157558688451, 0.6106532674038395, 0.6123655139673446, 0.6092717351298587, 0.6130269425463933, 0.6195078758007819, 0.6307254911373904, 0.63458204648136, 0.6346460556986873, 0.6291145925013202, 0.621956228363551, 0.6043110207869933, 0.5726584628186459, 0.5322419761779029, 0.49248691811620876, 0.4735028510772218, 0.4778128050439263, 0.4919588420732586, 0.49926656105145806, 0.5005947523109995, 0.49963461405109, 0.50545411872643, 0.5196908354803091, 0.5393363310983448, 0.5595579096723261, 0.5697940503432495]

print('average of noncommuter:',np.mean(y22))
# y23 = [0.9953114429113108, 0.980065765666546, 0.9418178385437153, 0.8687518683427996, 0.7499960666467377, 0.6108497616387923, 0.5056876288173193, 0.47609307887159963, 0.5211693072578234, 0.5706508912978493, 0.6152708507056436, 0.639689107758146, 0.6515521011973128, 0.6571059960037131, 0.6622822888969304, 0.6657908400069227, 0.6757343570540757, 0.6851744048836514, 0.699334476628015, 0.7098129297188439, 0.7207319183750531, 0.7235639327239258, 0.7342626535974449, 0.7434824336443304, 0.7378970720118315, 0.7128966786765053, 0.7052187731084504, 0.7266634150946365, 0.7840589058984565, 0.8389370506143898, 0.8734089586053903, 0.889944775720197, 0.8995264242672163, 0.9099262102927989, 0.92525055460281, 0.9497946789597067, 0.9825831117544329, 0.997529854151261]
y23 = [0.9953114429113108, 0.9791689611227363, 0.9415189036957787, 0.8687361349297503, 0.7479979231894774, 0.6118724334869964, 0.5062382982740445, 0.4745197375666703, 0.5251026605201466, 0.575418115451785, 0.6177724633804811, 0.6416715178023569, 0.6532670432196857, 0.6566969272644315, 0.6615113516575151, 0.6660897748548593, 0.6753095549017448, 0.6850485375792571, 0.6976510014317406, 0.7076889189571893, 0.7181201718088704, 0.7249012728331157, 0.734860523293318, 0.7406189524693592, 0.736260797054705, 0.7146902877641247, 0.7040387671297534, 0.7277018203558898, 0.7858525149860759, 0.8400855897669881, 0.8736921600402775, 0.889834641828852, 0.8998410925282021, 0.9098947434667002, 0.9238188140153244, 0.9507386837426643, 0.9831180477981089, 0.9977815887600497]

print('average of nonhome:',np.mean(y23))

# 1W
# y1 = [0.9995917811947204, 0.9987753435841611, 0.9908831133487549, 0.9725132671111716, 0.9364539393114709, 0.8682813988297727, 0.7632330929378147, 0.6787318002449313, 0.6240304803374609, 0.572322765002041, 0.5112260171451898, 0.46360048986256636, 0.4191046400870867, 0.3864471356647163, 0.3633147366988706, 0.3426316505647027, 0.3320179616274323, 0.32371751258674647, 0.3156892094162471, 0.2910600081643761, 0.2759559123690298, 0.2647979316913866, 0.25051027350659955, 0.24193767859572732, 0.2530956592733705, 0.2901074976187236, 0.3429037964348891, 0.412845285072799, 0.47897673152809905, 0.5271465505510954, 0.5558579398557627, 0.5804871411076337, 0.6093346033473942, 0.6459382228874677, 0.6811811130766091, 0.7319363178663764, 0.7675874268607974, 0.773166417199619]
# y2 = [0.9554455445544554, 0.9554455445544554, 0.9306930693069307, 0.9306930693069307, 0.8465346534653465, 0.8514851485148515, 0.6138613861386139, 0.5792079207920792, 0.41089108910891087, 0.3910891089108911, 0.33663366336633666, 0.3415841584158416, 0.26732673267326734, 0.2376237623762376, 0.24257425742574257, 0.21782178217821782, 0.1782178217821782, 0.15346534653465346, 0.15346534653465346, 0.1485148514851485, 0.12871287128712872, 0.15346534653465346, 0.16336633663366337, 0.2079207920792079, 0.21782178217821782, 0.24752475247524752, 0.29207920792079206, 0.3316831683168317, 0.43564356435643564, 0.5099009900990099, 0.5693069306930693, 0.6287128712871287, 0.6782178217821783, 0.7425742574257426, 0.8168316831683168, 0.8960396039603961, 0.9356435643564357, 0.9455445544554455]
# 10W
# y1 = [0.9996740459052017, 0.9981257639549097, 0.9918511476300421, 0.9746434877088144, 0.9388157001222328, 0.8693195708271085, 0.7663588211326905, 0.6752953958984109, 0.6292679614287654, 0.5684231970664132, 0.505351079722939, 0.4604237403232378, 0.42336004346054595, 0.3906016569333152, 0.36327583865272306, 0.3418986826022002, 0.33051745212549233, 0.32042645660736113, 0.30882792340078774, 0.2901263072117343, 0.27696591063425235, 0.26062746163248673, 0.2510525600977862, 0.24164063561048485, 0.2572728507401874, 0.28625560233600433, 0.3404047263343746, 0.41457286432160806, 0.4789487980442754, 0.536180904522613, 0.5654081216895287, 0.587342115985332, 0.6118429987776721, 0.6385712345511341, 0.6779166100774141, 0.7233736248811625, 0.75806057313595, 0.7668749151161212]
# y2 = [0.9413037290065471, 0.9405636208368916, 0.9172217477939083, 0.9140905209222886, 0.8245943637916311, 0.8134358098491318, 0.622203245089667, 0.5980074010816966, 0.45288926843154, 0.4292058070025619, 0.3387987475092514, 0.3107884998576715, 0.25271847423854255, 0.22322801024765157, 0.18411614005123825, 0.16669513236549957, 0.14335325932251636, 0.1363506974096214, 0.12980358667805295, 0.13105607742670083, 0.1345288926843154, 0.14506120125249075, 0.16048961001992598, 0.1830344434955878, 0.20927981781952748, 0.24543125533731852, 0.29564474807856533, 0.35485340165101054, 0.434044975804156, 0.49962994591517224, 0.567492171932821, 0.62732707087959, 0.6843153999430686, 0.7508112724167378, 0.8119555935098207, 0.866268146883006, 0.9160831198405921, 0.9350982066609735]

plt.plot(x,y11,linewidth = 1,linestyle = '--',color = seaborn.xkcd_rgb['orange red'],label = 'next state prediction: commuter',marker = 'o',markerfacecolor = 'w',markersize = 4)
plt.plot(x,y12,linewidth = 1,linestyle = '--',color = seaborn.xkcd_rgb['orange red'],label = 'next state prediction: non-commuter',marker = 's',markerfacecolor = 'w',markersize = 4)
plt.plot(x,y13,linewidth = 1,linestyle = '--',color = seaborn.xkcd_rgb['orange red'],label = 'next state prediction: non-home',marker = '^',markerfacecolor = 'w',markersize = 4)

plt.plot(x,y21,linewidth = 1,linestyle = '--',color = seaborn.xkcd_rgb['nice blue'],label = 'daily trips prediction: commuter',marker = 'o',markerfacecolor = 'w',markersize = 4)
plt.plot(x,y22,linewidth = 1,linestyle = '--',color = seaborn.xkcd_rgb['nice blue'],label = 'daily trips prediction: non-commuter',marker = 's',markerfacecolor = 'w',markersize = 4)
plt.plot(x,y23,linewidth = 1,linestyle = '--',color = seaborn.xkcd_rgb['nice blue'],label = 'daily trips prediction: non-home',marker = '^',markerfacecolor = 'w',markersize = 4)

plt.xlim(5,24)
plt.ylim(0,1.05)
plt.xticks(range(5,24,1))
plt.xlabel(r'Departure Time, [H]', fontsize=16)
plt.ylabel(r'Accuracy Rate', fontsize=16)
# for a, b in zip(x, y1):
#     plt.text(a, b, b, ha='center', va='bottom', fontsize=10)
plt.tick_params(labelsize=14)
plt.legend(fontsize=15)
plt.tight_layout()
plt.savefig(r'G:\Program\Pycharm Projects\File of Python3\SCD_System\result\metro_trip_accuracy_everyTS.eps', dpi=150)
# ==========



plt.show()
plt.close()